// tool_selection_logic.ts
// –õ–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—É

export interface Tool {
  name: string
  description: string
  parameters: any
  apiMethod?: "GET" | "POST" | "PUT" | "DELETE"
  apiEndpoint?: string
}

export interface ToolCategory {
  id: string
  name: string
  description: string
  icon: string
  keywords: string[]
  priority: number // 1-5, –≥–¥–µ 1 - —Å–∞–º—ã–π –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
  tools: string[] // –º–∞—Å—Å–∏–≤ –∏–º–µ–Ω –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
  minUserLevel?: number // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (1-–Ω–æ–≤–∏—á–æ–∫, 2-–æ–±—ã—á–Ω—ã–π, 3-—ç–∫—Å–ø–µ—Ä—Ç)
}

export interface ToolSelectionConfig {
  maxToolsPerRequest: number
  alwaysIncludeCategories: string[]
  contextualSelection: boolean
  userLevel: number // 1-–Ω–æ–≤–∏—á–æ–∫, 2-–æ–±—ã—á–Ω—ã–π, 3-—ç–∫—Å–ø–µ—Ä—Ç
  userPreferences?: {
    preferredCategories: string[]
    excludedCategories: string[]
  }
  // –ù–û–í–´–ï –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò
  isFinalResponse?: boolean // –§–ª–∞–≥ –¥–ª—è –¥–µ—Ç–µ–∫—Ü–∏–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
  hasToolExecutions?: boolean // –§–ª–∞–≥ –Ω–∞–ª–∏—á–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –≤ –∏—Å—Ç–æ—Ä–∏–∏
  hasMultipleEntities?: boolean // –§–ª–∞–≥ –Ω–∞–ª–∏—á–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π –≤ –∑–∞–ø—Ä–æ—Å–µ
  hasPasswordMention?: boolean // –§–ª–∞–≥ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–∞—Ä–æ–ª—è –≤ –∑–∞–ø—Ä–æ—Å–µ
  // –ù–û–í–´–ô –ü–ê–†–ê–ú–ï–¢–†: –î–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –∑–∞–º–µ–Ω—ã
  appendToExisting?: boolean // –ï—Å–ª–∏ true, –¥–æ–ø–æ–ª–Ω—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –≤–º–µ—Å—Ç–æ –∑–∞–º–µ–Ω—ã
  existingTools?: Tool[] // –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
}

// –ù–û–í–´–ô –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏—Å—Ç–æ—Ä–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
export interface ExecutionContext {
  hasExecutedTools: boolean
  executedToolNames: string[]
  lastIterationHadTools: boolean
  iterationCount: number
  isLikelyFinalResponse: boolean
}

// –¢–∏–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export const USER_LEVELS = {
  NOVICE: 1,
  INTERMEDIATE: 2,
  EXPERT: 3
} as const

// –ù–û–í–´–ô: –ú–∞—Å—Å–∏–≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–∏—è/–∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—É—â–Ω–æ—Å—Ç–µ–π (–∏—Å–∫–ª—é—á–∞—é—Ç—Å—è –ø—Ä–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç—è—Ö)
const ENTITY_MODIFICATION_TOOLS = [
  'createUser', 'createBook', 'createReservation',
  'updateUser', 'updateBook', 'updateReservation',
  'deleteUser', 'deleteBook', 'deleteReservation',
  // –¢–∞–∫–∂–µ –≤–∫–ª—é—á–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ CRUD
  'createBookInstance', 'updateBookInstance', 'deleteBookInstance',
  'assignRoleToUser', 'removeRoleFromUser', 'updateUserRole'
]

// –ù–û–í–´–ô: –ú–∞—Å—Å–∏–≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–±–æ—Ç—ã —Å –ø–∞—Ä–æ–ª—è–º–∏ (–∏—Å–∫–ª—é—á–∞—é—Ç—Å—è –µ—Å–ª–∏ –ø–∞—Ä–æ–ª—å –Ω–µ —É–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è)
const PASSWORD_TOOLS = [
  'changeUserPassword', 'resetUserPassword'
]

// –ù–û–í–´–ô: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
const FINAL_RESPONSE_TOOLS = [
  'searchUsers', 'searchBooks', 'searchReservations',
  'getUserById', 'getBookById', 'getReservationById',
  'getAllUsers', 'getAllBooks', 'getAllReservations',
  'systemContext', 'navigateToPage', 'stopAgent', 'cancelCurrentAction'
]

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Å —É—á–µ—Ç–æ–º —É—Ä–æ–≤–Ω–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export const TOOL_CATEGORIES: ToolCategory[] = [
  {
    id: "users",
    name: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
    description: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏",
    icon: "üë§",
    minUserLevel: 1,
    keywords: [
      "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "—é–∑–µ—Ä", "–∫–ª–∏–µ–Ω—Ç", "—á–∏—Ç–∞—Ç–µ–ª—å", "—Å—Ç—É–¥–µ–Ω—Ç", "—á–µ–ª–æ–≤–µ–∫", "–ª—é–¥–∏",
      "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º", "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö", "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
      "—Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "–¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å",
      "–Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "–ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "—Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
      "–æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "–∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "—É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
      "–ø—Ä–æ—Ñ–∏–ª—å", "–∞–∫–∫–∞—É–Ω—Ç", "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", "—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
      "–ø–∞—Ä–æ–ª—å", "—Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è", "–∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å", "—à—Ç—Ä–∞—Ñ", "–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
      "—Å –∫–Ω–∏–≥–∞–º–∏", "—Å –ø—Ä–æ—Å—Ä–æ—á–∫–∞–º–∏", "–∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è", "–ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ",
      "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "–æ—Ç—á–µ—Ç –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º", "–≥—Ä–∞—Ñ–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
      "–∫—Ç–æ", "–∫–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "–ø–æ–∫–∞–∑–∞—Ç—å –ª—é–¥–µ–π"
    ],
    priority: 1,
    tools: [
      "getAllUsers",
      "getUserById", 
      "searchUsers",
      "createUser",
      "updateUser",
      "deleteUser",
      "changeUserPassword",
      "resetUserPassword",
      "getUserReservations",
      "getUserActiveReservations",
      "getUserOverdueReservations",
      "getUserRecommendations",
      "getUsersWithBooks",
      "getUsersWithFines",
      "getUserStatistics"
    ]
  },
  {
    id: "books",
    name: "–ö–Ω–∏–≥–∏",
    description: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–æ–º –∫–Ω–∏–≥",
    icon: "üìö",
    minUserLevel: 1,
    keywords: [
      "–∫–Ω–∏–≥–∞", "–∫–Ω–∏–≥–∏", "–ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "–∏–∑–¥–∞–Ω–∏–µ", "—Ç–æ–º", "—ç–∫–∑–µ–º–ø–ª—è—Ä", "–∫–∞—Ç–∞–ª–æ–≥",
      "–∫–Ω–∏–≥—É", "–∫–Ω–∏–≥–µ", "–∫–Ω–∏–≥–æ–π", "–∫–Ω–∏–≥–∞–º", "–∫–Ω–∏–≥–∞–º–∏",
      "–¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É", "—Å–æ–∑–¥–∞—Ç—å –∫–Ω–∏–≥—É", "–Ω–æ–≤–∞—è –∫–Ω–∏–≥–∞", "–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–Ω–∏–≥—É",
      "–Ω–∞–π—Ç–∏ –∫–Ω–∏–≥—É", "–ø–æ–∏—Å–∫ –∫–Ω–∏–≥", "–ø–æ–∫–∞–∑–∞—Ç—å –∫–Ω–∏–≥–∏", "—Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥", "–∫–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥",
      "–æ–±–Ω–æ–≤–∏—Ç—å –∫–Ω–∏–≥—É", "–∏–∑–º–µ–Ω–∏—Ç—å –∫–Ω–∏–≥—É", "—É–¥–∞–ª–∏—Ç—å –∫–Ω–∏–≥—É",
      "–∞–≤—Ç–æ—Ä", "–Ω–∞–∑–≤–∞–Ω–∏–µ", "–∂–∞–Ω—Ä", "ISBN", "–∏–∑–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ", "–≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è",
      "–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å", "—ç–∫–∑–µ–º–ø–ª—è—Ä—ã", "–∫–æ–ø–∏–∏", "–ø–æ–ª–∫–∞", "–ø–æ–∑–∏—Ü–∏—è", "—Å–æ—Å—Ç–æ—è–Ω–∏–µ",
      "–∏–∑–±—Ä–∞–Ω–Ω–æ–µ", "—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", "–ø–æ–ø—É–ª—è—Ä–Ω—ã–µ", "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "—Ñ–æ–Ω–¥",
      "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–Ω–∏–≥", "–æ—Ç—á–µ—Ç –ø–æ –∫–Ω–∏–≥–∞–º", "–≥—Ä–∞—Ñ–∏–∫ –∫–Ω–∏–≥", "—Ç–æ–ø –∫–Ω–∏–≥", "–ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–Ω–∏–≥–∏",
      "—á—Ç–æ –ø–æ—á–∏—Ç–∞—Ç—å", "–Ω–∞–π–¥–∏ –∫–Ω–∏–≥—É", "–ø–æ–∫–∞–∂–∏ –∫–Ω–∏–≥–∏"
    ],
    priority: 1,
    tools: [
      "getAllBooks",
      "getBookById",
      "searchBooks",
      "createBook",
      "updateBook",
      "deleteBook",
      "updateBookGenre",
      "updateBookCategorization",
      "addBookToFavorites",
      "removeBookFromFavorites",
      "getBookAvailability",
      "getBestAvailableBookInstance",
      "getAllBookInstances",
      "getBookInstanceById",
      "getBookInstancesByBookId",
      "createBookInstance",
      "updateBookInstance",
      "deleteBookInstance",
      "updateBookInstanceStatus",
      "getBookInstanceStats",
      "createMultipleBookInstances",
      "autoCreateBookInstances",
      "getBookInstanceReservation",
      "getInstanceStatusSummary",
      "bulkCreateBookInstances",
      "bulkUpdateBookInstanceStatuses",
      "getBookStatistics",
      "getTopPopularBooks"
    ]
  },
  {
    id: "reservations",
    name: "–†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è",
    description: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –≤—ã–¥–∞—á–µ–π –∫–Ω–∏–≥",
    icon: "üìÖ",
    minUserLevel: 1,
    keywords: [
      "—Ä–µ–∑–µ—Ä–≤", "–±—Ä–æ–Ω—å", "–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", "—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ", "–∑–∞–∫–∞–∑", "–∑–∞–ø—Ä–æ—Å",
      "—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è", "—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—é", "—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ–º", "—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è—Ö",
      "–±—Ä–æ–Ω–∏", "–±—Ä–æ–Ω—å—é",
      "–∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å", "–∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞—Ç—å", "–∑–∞–∫–∞–∑–∞—Ç—å –∫–Ω–∏–≥—É", "–≤–∑—è—Ç—å –∫–Ω–∏–≥—É",
      "–≤—ã–¥–∞—Ç—å –∫–Ω–∏–≥—É", "–≤–µ—Ä–Ω—É—Ç—å –∫–Ω–∏–≥—É", "–ø—Ä–æ–¥–ª–∏—Ç—å", "–ø—Ä–æ–¥–ª–µ–Ω–∏–µ",
      "–æ–¥–æ–±—Ä–∏—Ç—å", "–æ—Ç–∫–ª–æ–Ω–∏—Ç—å", "–æ—Ç–º–µ–Ω–∏—Ç—å", "—Å—Ç–∞—Ç—É—Å", "—Å—Ä–æ–∫",
      "–ø—Ä–æ—Å—Ä–æ—á–∫–∞", "—à—Ç—Ä–∞—Ñ", "–∏—Å—Ç–æ—Ä–∏—è –≤—ã–¥–∞—á", "–∞–∫—Ç–∏–≤–Ω—ã–µ –±—Ä–æ–Ω–∏",
      "–¥–∞—Ç—ã", "–ø–µ—Ä–∏–æ–¥", "–º–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ", "–ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ",
      "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–π", "–æ—Ç—á–µ—Ç –ø–æ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è–º", "–≥—Ä–∞—Ñ–∏–∫ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–π",
      "–≤—ã–¥–∞—á–∞", "–≤–æ–∑–≤—Ä–∞—Ç", "–∫—Ç–æ –≤–∑—è–ª", "–∫–æ–≥–¥–∞ –≤–µ—Ä–Ω—É—Ç—å"
    ],
    priority: 1,
    tools: [
      "getAllReservations",
      "getReservationById",
      "searchReservations",
      "createReservation",
      "updateReservation",
      "deleteReservation",
      "getReservationDates",
      "getReservationDatesByBookId",
      "getReservationsByUserId",
      "bulkUpdateReservations",
      "getOverdueReservations",
      "getReservationStatistics"
    ]
  },
  {
    id: "roles",
    name: "–†–æ–ª–∏ –∏ –ø—Ä–∞–≤–∞",
    description: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
    icon: "üë•",
    minUserLevel: 2, // –¢–æ–ª—å–∫–æ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤
    keywords: [
      "—Ä–æ–ª—å", "–ø—Ä–∞–≤–∞", "–¥–æ—Å—Ç—É–ø", "—Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è", "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", "–±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—å",
      "–Ω–∞–∑–Ω–∞—á–∏—Ç—å —Ä–æ–ª—å", "–∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å", "–ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞", "–ø–æ–ª–Ω–æ–º–æ—á–∏—è",
      "–≥—Ä—É–ø–ø–∞", "—Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "—É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞", "—É–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å",
      "–º–∞—Å—Å–æ–≤–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ", "–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π", "–∞–¥–º–∏–Ω", "–º–æ–¥–µ—Ä–∞—Ç–æ—Ä"
    ],
    priority: 3,
    tools: [
      "getAllRoles",
      "assignRoleToUser",
      "assignRoleToMultipleUsers",
      "updateUserRole",
      "removeRoleFromUser",
      "removeRoleFromMultipleUsers"
    ]
  },
  {
    id: "reports",
    name: "–û—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
    description: "–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤ –∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤",
    icon: "üìä",
    minUserLevel: 1,
    keywords: [
      "–æ—Ç—á–µ—Ç", "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "–≥—Ä–∞—Ñ–∏–∫", "–¥–∏–∞–≥—Ä–∞–º–º–∞", "–∞–Ω–∞–ª–∏—Ç–∏–∫–∞", "–¥–∞–Ω–Ω—ã–µ",
      "–ø–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫", "—Å–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç", "–ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É",
      "–∞–Ω–∞–ª–∏–∑", "–º–µ—Ç—Ä–∏–∫–∏", "KPI", "–¥–∞—à–±–æ—Ä–¥", "–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è",
      "—Ç—Ä–µ–Ω–¥—ã", "–¥–∏–Ω–∞–º–∏–∫–∞", "—Å–≤–æ–¥–∫–∞", "—Å–≤–æ–¥–Ω—ã–π –æ—Ç—á–µ—Ç", "–ø–æ–ø—É–ª—è—Ä–Ω—ã–µ",
      "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", "–∫–Ω–∏–≥–∏", "—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è", "–ø–µ—Ä–∏–æ–¥", "–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞",
      "html –æ—Ç—á–µ—Ç", "—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç", "excel –æ—Ç—á–µ—Ç", "pdf –æ—Ç—á–µ—Ç",
      "—Å–∫–æ–ª—å–∫–æ", "–∫–æ–≥–¥–∞", "–≥–¥–µ", "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ", "–æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å"
    ],
    priority: 2,
    tools: [
      "getUserStatistics",
      "getReservationStatistics", 
      "getBookStatistics",
      "getTopPopularBooks",
      "getAllUsers", // –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤
      "getAllBooks",
      "getAllReservations",
      "searchUsers",
      "searchBooks",
      "getUserReservations",
      "getBookAvailability",
      "getOverdueReservations"
    ]
  },
  {
    id: "notifications",
    name: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
    description: "–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º",
    icon: "üîî",
    minUserLevel: 2, // –¢–æ–ª—å–∫–æ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤
    keywords: [
      "—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", "—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", "push", "email", "—Å–æ–æ–±—â–µ–Ω–∏–µ",
      "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å", "–æ–ø–æ–≤–µ—Å—Ç–∏—Ç—å", "–∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å", "–∞–ª–µ—Ä—Ç", "–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ",
      "—à–∞–±–ª–æ–Ω", "–∫–∞—Å—Ç–æ–º–Ω–æ–µ", "–º–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞", "—Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
      "–Ω–∞–ø–æ–º–Ω–∏—Ç—å", "–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ", "–ø–∏—Å—å–º–æ", "—Å–º—Å"
    ],
    priority: 4,
    tools: [
      "sendCustomPushNotification",
      "sendCustomSingleEmail", 
      "sendCustomEmailWithTemplate"
    ]
  },
  {
    id: "history",
    name: "–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–æ–≤",
    description: "–†–∞–±–æ—Ç–∞ —Å –∏—Å—Ç–æ—Ä–∏–µ–π –¥–∏–∞–ª–æ–≥–æ–≤ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞",
    icon: "üìù",
    minUserLevel: 2, // –¢–æ–ª—å–∫–æ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤
    keywords: [
      "–∏—Å—Ç–æ—Ä–∏—è", "–¥–∏–∞–ª–æ–≥", "—á–∞—Ç", "—Å–æ–æ–±—â–µ–Ω–∏—è", "–ø–æ–∏—Å–∫ –≤ –∏—Å—Ç–æ—Ä–∏–∏",
      "–∫–æ–Ω–≤–µ—Ä—Å–∞—Ü–∏—è", "—Ä–∞–∑–≥–æ–≤–æ—Ä", "–ª–æ–≥–∏", "–∞—Ä—Ö–∏–≤", "–ø—Ä–æ—à–ª—ã–µ –∑–∞–ø—Ä–æ—Å—ã",
      "—á—Ç–æ –º—ã –≥–æ–≤–æ—Ä–∏–ª–∏", "–Ω–∞–π—Ç–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä", "–∫–æ–≥–¥–∞ –≥–æ–≤–æ—Ä–∏–ª–∏"
    ],
    priority: 5,
    tools: [
      "getAllDialogHistory",
      "getDialogHistoryByConversationId",
      "searchDialogHistory"
    ]
  },
  {
    id: "navigation",
    name: "–ù–∞–≤–∏–≥–∞—Ü–∏—è",
    description: "–ü–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏",
    icon: "üß≠",
    minUserLevel: 1,
    keywords: [
      "–ø–µ—Ä–µ–π—Ç–∏", "–æ—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É", "–ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É", "–Ω–∞–≤–∏–≥–∞—Ü–∏—è",
      "—Å—Ç—Ä–∞–Ω–∏—Ü–∞", "—Ä–∞–∑–¥–µ–ª", "–º–µ–Ω—é", "–ø–µ—Ä–µ—Ö–æ–¥", "—Å—Å—ã–ª–∫–∞", "URL",
      "–≥–ª–∞–≤–Ω–∞—è", "–∫–∞—Ç–∞–ª–æ–≥", "–ø—Ä–æ—Ñ–∏–ª—å", "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏", "–∞–¥–º–∏–Ω–∫–∞",
      "–ø–æ–∫–∞–∂–∏", "–æ—Ç–∫—Ä–æ–π", "–≤–µ–¥–∏ –Ω–∞"
    ],
    priority: 5,
    tools: [
      "navigateToPage"
    ]
  },
  {
    id: "system",
    name: "–°–∏—Å—Ç–µ–º–Ω—ã–µ",
    description: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞",
    icon: "‚öôÔ∏è",
    minUserLevel: 1,
    keywords: [
      "—Å—Ç–æ–ø", "–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", "–æ—Ç–º–µ–Ω–∏—Ç—å", "–ø—Ä–µ—Ä–≤–∞—Ç—å", "–æ—Ç–º–µ–Ω–∞",
      "–∞–≥–µ–Ω—Ç", "–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç", "—Å–∏—Å—Ç–µ–º–∞", "—Å–±—Ä–æ—Å", "–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫",
      "–∫–æ–Ω—Ç–µ–∫—Å—Ç", "—Å–∏—Å—Ç–µ–º–Ω—ã–π", "—Ö–≤–∞—Ç–∏—Ç", "–¥–æ–≤–æ–ª—å–Ω–æ"
    ],
    priority: 1,
    tools: [
      "systemContext",
      "stopAgent",
      "cancelCurrentAction"
    ]
  },
  {
    id: "advanced",
    name: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ",
    description: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è —ç–∫—Å–ø–µ—Ä—Ç–æ–≤",
    icon: "üîß",
    minUserLevel: 3, // –¢–æ–ª—å–∫–æ –¥–ª—è —ç–∫—Å–ø–µ—Ä—Ç–æ–≤
    keywords: [
      "–º–∞—Å—Å–æ–≤–æ–µ", "bulk", "–ø–∞–∫–µ—Ç–Ω–æ–µ", "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è", "—Å–∫—Ä–∏–ø—Ç",
      "–∏–º–ø–æ—Ä—Ç", "—ç–∫—Å–ø–æ—Ä—Ç", "–º–∏–≥—Ä–∞—Ü–∏—è", "—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è", "backup",
      "API", "webhook", "–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è", "–∫–∞—Å—Ç–æ–º–Ω—ã–π", "advanced"
    ],
    priority: 4,
    tools: [
      "bulkUpdateReservations",
      "bulkCreateBookInstances",
      "bulkUpdateBookInstanceStatuses",
      "createMultipleBookInstances",
      "autoCreateBookInstances",
      "assignRoleToMultipleUsers",
      "removeRoleFromMultipleUsers"
    ]
  }
]

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —É—Ä–æ–≤–Ω–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export const DEFAULT_TOOL_SELECTION_CONFIG: ToolSelectionConfig = {
  maxToolsPerRequest: 20,
  alwaysIncludeCategories: ["system"],
  contextualSelection: true,
  userLevel: USER_LEVELS.INTERMEDIATE, // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  userPreferences: {
    preferredCategories: [],
    excludedCategories: []
  },
  // –ù–û–í–´–ï –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
  isFinalResponse: false,
  hasToolExecutions: false,
  hasMultipleEntities: false,
  hasPasswordMention: false
}

// –ù–û–í–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π –≤ –∑–∞–ø—Ä–æ—Å–µ
function detectMultipleEntities(query: string): { hasMultiple: boolean; entities: string[] } {
  const normalizedQuery = query.toLowerCase()
  
  // –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π
  const entityPatterns = [
    { name: 'users', patterns: ['–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª', '—é–∑–µ—Ä', '—á–∏—Ç–∞—Ç–µ–ª', '—Å—Ç—É–¥–µ–Ω—Ç', '–ª—é–¥–∏', '—á–µ–ª–æ–≤–µ–∫'] },
    { name: 'books', patterns: ['–∫–Ω–∏–≥', '–ª–∏—Ç–µ—Ä–∞—Ç—É—Ä', '–∏–∑–¥–∞–Ω–∏', '—Ç–æ–º', '–∫–∞—Ç–∞–ª–æ–≥'] },
    { name: 'reservations', patterns: ['—Ä–µ–∑–µ—Ä–≤', '–±—Ä–æ–Ω', '–∑–∞–∫–∞–∑', '–≤—ã–¥–∞—á', '–≤–æ–∑–≤—Ä–∞—Ç'] }
  ]
  
  const detectedEntities: string[] = []
  
  entityPatterns.forEach(entity => {
    const hasEntity = entity.patterns.some(pattern => normalizedQuery.includes(pattern))
    if (hasEntity) {
      detectedEntities.push(entity.name)
    }
  })
  
  return {
    hasMultiple: detectedEntities.length >= 2,
    entities: detectedEntities
  }
}

// –ù–û–í–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–∞—Ä–æ–ª—è –≤ –∑–∞–ø—Ä–æ—Å–µ
function hasPasswordMention(query: string): boolean {
  const normalizedQuery = query.toLowerCase()
  const passwordPatterns = [
    '–ø–∞—Ä–æ–ª', 'password', '—Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å', '–∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å', '—Å–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å',
    '–Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å', '—Å—Ç–∞—Ä—ã–π –ø–∞—Ä–æ–ª—å', '–∑–∞–±—ã–ª –ø–∞—Ä–æ–ª—å', '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å',
    '–æ–±–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å', '—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å', '–∑–∞–¥–∞—Ç—å –ø–∞—Ä–æ–ª—å'
  ]
  
  return passwordPatterns.some(pattern => normalizedQuery.includes(pattern))
}

// –ù–û–í–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è: –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
export function analyzeExecutionContext(
  conversationHistory: any[],
  currentIteration: number = 0
): ExecutionContext {
  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏–∏
  const recentMessages = conversationHistory.slice(-10) // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π
  
  const hasExecutedTools = recentMessages.some(msg => 
    msg.apiCall || 
    msg.content?.includes('–î—É–º–∞—é, –Ω—É–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç') ||
    msg.content?.includes('‚ö°') ||
    msg.content?.includes('üìö') ||
    msg.content?.includes('üë§') ||
    msg.content?.includes('üìÖ')
  )
  
  const executedToolNames: string[] = []
  recentMessages.forEach(msg => {
    if (msg.apiCall?.endpoint) {
      executedToolNames.push(msg.apiCall.endpoint)
    }
  })
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
  const lastMessage = recentMessages[recentMessages.length - 1]
  const lastIterationHadTools = lastMessage?.apiCall !== undefined
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —Ñ–∏–Ω–∞–ª—å–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º
  const isLikelyFinalResponse = hasExecutedTools && 
                                 !lastIterationHadTools && 
                                 currentIteration > 0 &&
                                 executedToolNames.length > 0
  
  return {
    hasExecutedTools,
    executedToolNames,
    lastIterationHadTools,
    iterationCount: currentIteration,
    isLikelyFinalResponse
  }
}

// ---------- –ö–≠–®–ò–†–û–í–ê–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –ê–ù–ê–õ–ò–ó–ê –ó–ê–ü–†–û–°–û–í ----------
interface QueryAnalysisCache {
  [queryHash: string]: {
    analysis: ReturnType<typeof analyzeUserQuery>
    timestamp: number
  }
}

// –ü—Ä–æ—Å—Ç–æ–π –∫—ç—à –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ (–≤ –ø–∞–º—è—Ç–∏)
const queryAnalysisCache: QueryAnalysisCache = {}
const QUERY_CACHE_TTL = 30 * 60 * 1000 // 30 –º–∏–Ω—É—Ç

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ö—ç—à–∞ –∑–∞–ø—Ä–æ—Å–∞
function getQueryHash(query: string, userLevel: number): string {
  return `${query.toLowerCase().trim()}_${userLevel}`
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∑–∞–ø–∏—Å–µ–π –∫—ç—à–∞
function cleanupQueryCache(): void {
  const now = Date.now()
  Object.keys(queryAnalysisCache).forEach(key => {
    if (now - queryAnalysisCache[key].timestamp > QUERY_CACHE_TTL) {
      delete queryAnalysisCache[key]
    }
  })
}
// ---------- –ö–û–ù–ï–¶ –ö–≠–®–ò–†–û–í–ê–ù–ò–Ø –ê–ù–ê–õ–ò–ó–ê –ó–ê–ü–†–û–°–û–í ----------

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–π –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
const TOOL_PHRASE_MAPPINGS: Record<string, string[]> = {
  // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
  "—Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è": ["createUser"],
  "–¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è": ["createUser"],
  "–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è": ["createUser"],
  "–Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è": ["searchUsers", "getUserById"],
  "–ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π": ["searchUsers"],
  "–ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π": ["getAllUsers"],
  "—Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π": ["getAllUsers"],
  "–≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏": ["getAllUsers"],
  "–æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è": ["updateUser"],
  "–∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è": ["updateUser"],
  "—É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è": ["deleteUser"],
  "—Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å": ["changeUserPassword"],
  "—Å–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å": ["resetUserPassword"],
  "—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è": ["getUserReservations"],
  "–∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è": ["getUserActiveReservations"],
  "–ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è": ["getUserOverdueReservations"],
  "—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è": ["getUserRecommendations"],
  "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –∫–Ω–∏–≥–∞–º–∏": ["getUsersWithBooks"],
  "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ —à—Ç—Ä–∞—Ñ–∞–º–∏": ["getUsersWithFines"],
  "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π": ["getUserStatistics"],

  // –ö–Ω–∏–≥–∏
  "—Å–æ–∑–¥–∞—Ç—å –∫–Ω–∏–≥—É": ["createBook"],
  "–¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É": ["createBook"],
  "–Ω–æ–≤–∞—è –∫–Ω–∏–≥–∞": ["createBook"],
  "–Ω–∞–π—Ç–∏ –∫–Ω–∏–≥—É": ["searchBooks", "getBookById"],
  "–ø–æ–∫–∞–∑–∞—Ç—å –∫–Ω–∏–≥–∏": ["searchBooks"],
  "–ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–Ω–∏–≥–∏": ["getAllBooks"],
  "—Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥": ["getAllBooks"],
  "–≤—Å–µ –∫–Ω–∏–≥–∏": ["getAllBooks"],
  "–∫–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥": ["getAllBooks"],
  "–æ–±–Ω–æ–≤–∏—Ç—å –∫–Ω–∏–≥—É": ["updateBook"],
  "–∏–∑–º–µ–Ω–∏—Ç—å –∫–Ω–∏–≥—É": ["updateBook"],
  "—É–¥–∞–ª–∏—Ç—å –∫–Ω–∏–≥—É": ["deleteBook"],
  "–∏–∑–º–µ–Ω–∏—Ç—å –∂–∞–Ω—Ä –∫–Ω–∏–≥–∏": ["updateBookGenre"],
  "–∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è –∫–Ω–∏–≥–∏": ["updateBookCategorization"],
  "–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ": ["addBookToFavorites"],
  "—É–±—Ä–∞—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ": ["removeBookFromFavorites"],
  "–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–Ω–∏–≥–∏": ["getBookAvailability"],
  "–ª—É—á—à–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä": ["getBestAvailableBookInstance"],
  "–≤—Å–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–Ω–∏–≥–∏": ["getAllBookInstances"],
  "—ç–∫–∑–µ–º–ø–ª—è—Ä –∫–Ω–∏–≥–∏": ["getBookInstanceById"],
  "—ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–Ω–∏–≥–∏": ["getBookInstancesByBookId"],
  "—Å–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä": ["createBookInstance"],
  "–æ–±–Ω–æ–≤–∏—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä": ["updateBookInstance"],
  "—É–¥–∞–ª–∏—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä": ["deleteBookInstance"],
  "–∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å —ç–∫–∑–µ–º–ø–ª—è—Ä–∞": ["updateBookInstanceStatus"],
  "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤": ["getBookInstanceStats"],
  "—Å–æ–∑–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤": ["createMultipleBookInstances"],
  "–∞–≤—Ç–æ—Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤": ["autoCreateBookInstances"],
  "—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞": ["getBookInstanceReservation"],
  "—Å–≤–æ–¥–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤": ["getInstanceStatusSummary"],
  "–º–∞—Å—Å–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤": ["bulkCreateBookInstances"],
  "–º–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤": ["bulkUpdateBookInstanceStatuses"],
  "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–Ω–∏–≥": ["getBookStatistics"],
  "—Ç–æ–ø –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–Ω–∏–≥": ["getTopPopularBooks"],
  "–ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–Ω–∏–≥–∏": ["getTopPopularBooks"],

  // –†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è
  "—Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ": ["createReservation"],
  "—Å–æ–∑–¥–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ": ["createReservation"],
  "—Å–æ–∑–¥–∞–π —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ": ["createReservation"],
  "—Å–æ–∑–¥–∞–π –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ": ["createReservation"],
  "–∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–∏–≥—É": ["createReservation"],
  "–∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–∏–≥—É": ["createReservation"],
  "–Ω–∞–π—Ç–∏ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ": ["searchReservations", "getReservationById"],
  "–ø–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è": ["searchReservations"],
  "–ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è": ["getAllReservations"],
  "—Å–ø–∏—Å–æ–∫ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–π": ["getAllReservations"],
  "–≤—Å–µ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è": ["getAllReservations"],
  "–æ–±–Ω–æ–≤–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ": ["updateReservation"],
  "–∏–∑–º–µ–Ω–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ": ["updateReservation"],
  "—É–¥–∞–ª–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ": ["deleteReservation"],
  "–æ—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ": ["deleteReservation"],
  "–¥–∞—Ç—ã —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è": ["getReservationDates"],
  "–¥–∞—Ç—ã —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è –∫–Ω–∏–≥–∏": ["getReservationDatesByBookId"],
  "—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ id": ["getReservationsByUserId"],
  "–º–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–π": ["bulkUpdateReservations"],
  "–ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è": ["getOverdueReservations"],
  "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–π": ["getReservationStatistics"],

  // –†–æ–ª–∏
  "–Ω–∞–∑–Ω–∞—á–∏—Ç—å —Ä–æ–ª—å": ["assignRoleToUser"],
  "–∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å": ["updateUserRole"],
  "—É–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å": ["removeRoleFromUser"],
  "–º–∞—Å—Å–æ–≤–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π": ["assignRoleToMultipleUsers"],
  "–º–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π": ["removeRoleFromMultipleUsers"],

  // –û—Ç—á–µ—Ç—ã
  "—Å–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç": ["getUserStatistics", "getReservationStatistics", "getBookStatistics"],
  "–ø–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫": ["getUserStatistics", "getReservationStatistics", "getBookStatistics"],
  "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞": ["getUserStatistics", "getReservationStatistics", "getBookStatistics"],
  "–æ—Ç—á–µ—Ç": ["getUserStatistics", "getReservationStatistics", "getBookStatistics"],

  // –ù–∞–≤–∏–≥–∞—Ü–∏—è
  "–ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É": ["navigateToPage"],
  "–æ—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É": ["navigateToPage"],
  "–ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É": ["navigateToPage"],

  // –°–∏—Å—Ç–µ–º–Ω—ã–µ
  "–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≥–µ–Ω—Ç–∞": ["stopAgent"],
  "–æ—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ": ["cancelCurrentAction"],
  "—Å–∏—Å—Ç–µ–º–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç": ["systemContext"]
}

// –£–ª—É—á—à–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–ø—Ä–æ—Å–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Å–∏–Ω–æ–Ω–∏–º–æ–≤ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
export function analyzeUserQuery(query: string, userLevel: number = USER_LEVELS.INTERMEDIATE): {
  detectedCategories: string[]
  detectedTools: string[]
  confidence: Record<string, number>
  suggestedCategories: string[]
  intentType: 'question' | 'action' | 'report' | 'navigation'
  complexity: 'simple' | 'medium' | 'complex'
  // –ù–û–í–´–ï –ø–æ–ª—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
  hasMultipleEntities: boolean
  entityTypes: string[]
  hasPasswordMention: boolean
} {
  // –ù–û–í–û–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à –¥–ª—è —ç—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
  const queryHash = getQueryHash(query, userLevel)
  const cachedAnalysis = queryAnalysisCache[queryHash]
  
  if (cachedAnalysis && (Date.now() - cachedAnalysis.timestamp) < QUERY_CACHE_TTL) {
    console.log(`üéØ –ö—ç—à –∞–Ω–∞–ª–∏–∑–∞ HIT: "${query.substring(0, 50)}..."`)
    return cachedAnalysis.analysis
  }
  
  console.log(`‚ùå –ö—ç—à –∞–Ω–∞–ª–∏–∑–∞ MISS: "${query.substring(0, 50)}..."`)
  
  const normalizedQuery = query.toLowerCase().trim()
  const confidence: Record<string, number> = {}
  const detectedCategories: string[] = []
  const detectedTools: string[] = []

  // –ù–û–í–ê–Ø –ª–æ–≥–∏–∫–∞: –ê–Ω–∞–ª–∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π
  const multipleEntitiesAnalysis = detectMultipleEntities(query)
  
  // –ù–û–í–ê–Ø –ª–æ–≥–∏–∫–∞: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–∞—Ä–æ–ª—è
  const passwordMention = hasPasswordMention(query)

  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω—ã–µ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏—è
  Object.entries(TOOL_PHRASE_MAPPINGS).forEach(([phrase, tools]) => {
    if (normalizedQuery.includes(phrase.toLowerCase())) {
      tools.forEach(tool => {
        if (!detectedTools.includes(tool)) {
          detectedTools.push(tool)
        }
      })
    }
  })

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –Ω–∞–º–µ—Ä–µ–Ω–∏—è
  let intentType: 'question' | 'action' | 'report' | 'navigation' = 'action'
  
  const questionWords = ['—á—Ç–æ', '–∫–∞–∫', '–≥–¥–µ', '–∫–æ–≥–¥–∞', '—Å–∫–æ–ª—å–∫–æ', '–∫—Ç–æ', '–∫–∞–∫–æ–π', '–∫–∞–∫–∞—è', '–∫–∞–∫–∏–µ', '–ø–æ—á–µ–º—É']
  const actionWords = ['—Å–æ–∑–¥–∞—Ç—å', '–¥–æ–±–∞–≤–∏—Ç—å', '—É–¥–∞–ª–∏—Ç—å', '–∏–∑–º–µ–Ω–∏—Ç—å', '–æ–±–Ω–æ–≤–∏—Ç—å', '–Ω–∞–∑–Ω–∞—á–∏—Ç—å', '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å']
  const reportWords = ['–æ—Ç—á–µ—Ç', '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', '–≥—Ä–∞—Ñ–∏–∫', '–ø–æ–∫–∞–∑–∞—Ç—å', '–ø–æ—Å—Ç—Ä–æ–∏—Ç—å', '—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å']
  const navigationWords = ['–ø–µ—Ä–µ–π—Ç–∏', '–æ—Ç–∫—Ä—ã—Ç—å', '–ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É', '–≤–µ–¥–∏']

  if (questionWords.some(word => normalizedQuery.includes(word))) {
    intentType = 'question'
  } else if (reportWords.some(word => normalizedQuery.includes(word))) {
    intentType = 'report'
  } else if (navigationWords.some(word => normalizedQuery.includes(word))) {
    intentType = 'navigation'
  } else if (actionWords.some(word => normalizedQuery.includes(word))) {
    intentType = 'action'
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
  const complexity = getQueryComplexity(normalizedQuery)

  // –§–∏–ª—å—Ç—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ —É—Ä–æ–≤–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const availableCategories = TOOL_CATEGORIES.filter(category => 
    !category.minUserLevel || category.minUserLevel <= userLevel
  )

  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
  availableCategories.forEach(category => {
    let score = 0
    let matchCount = 0

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    category.keywords.forEach(keyword => {
      if (normalizedQuery.includes(keyword.toLowerCase())) {
        const weight = keyword.split(" ").length
        score += weight
        matchCount++
      }
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å –∏–º–µ–Ω–∞–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    category.tools.forEach(toolName => {
      const normalizedToolName = toolName.toLowerCase()
      if (normalizedQuery.includes(normalizedToolName) || 
          isToolNameVariant(normalizedQuery, toolName)) {
        score += 2
        matchCount++
        if (!detectedTools.includes(toolName)) {
          detectedTools.push(toolName)
        }
      }
    })

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤ –Ω–∞–º–µ—Ä–µ–Ω–∏–π
    if (intentType === 'report' && category.id === 'reports') {
      score += 1
    }
    if (intentType === 'navigation' && category.id === 'navigation') {
      score += 1
    }

    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º —Å—á–µ—Ç
    if (matchCount > 0) {
      confidence[category.id] = score
      detectedCategories.push(category.id)
    }
  })

  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
  detectedCategories.sort((a, b) => (confidence[b] || 0) - (confidence[a] || 0))

  // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const suggestedCategories = getSuggestedCategories(detectedCategories, normalizedQuery, intentType, userLevel)

  const result = {
    detectedCategories,
    detectedTools,
    confidence,
    suggestedCategories,
    intentType,
    complexity,
    // –ù–û–í–´–ï –ø–æ–ª—è
    hasMultipleEntities: multipleEntitiesAnalysis.hasMultiple,
    entityTypes: multipleEntitiesAnalysis.entities,
    hasPasswordMention: passwordMention
  }
  
  // –ù–û–í–û–ï: –ö—ç—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞
  queryAnalysisCache[queryHash] = {
    analysis: result,
    timestamp: Date.now()
  }
  
  // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –æ—á–∏—â–∞–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∑–∞–ø–∏—Å–∏ (—Ä–∞–∑ –≤ 100 –∑–∞–ø—Ä–æ—Å–æ–≤)
  if (Object.keys(queryAnalysisCache).length % 100 === 0) {
    cleanupQueryCache()
  }
  
  return result
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–∞
function getQueryComplexity(query: string): 'simple' | 'medium' | 'complex' {
  const words = query.split(/\s+/).length
  const hasMultipleEntities = (query.match(/\b(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª|–∫–Ω–∏–≥|—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω)\w*\b/g) || []).length > 1
  const hasDateRanges = /\b(–∑–∞\s+\w+|—Å\s+\d+|–¥–æ\s+\d+|–º–µ–∂–¥—É\s+\d+)\b/.test(query)
  const hasConditions = /\b(–µ—Å–ª–∏|–∫–æ–≥–¥–∞|–≥–¥–µ|—Å —É—Å–ª–æ–≤–∏–µ–º)\b/.test(query)
  const hasSpecificActions = /\b(—Å–æ–∑–¥–∞—Ç—å|–¥–æ–±–∞–≤–∏—Ç—å|—É–¥–∞–ª–∏—Ç—å|–∏–∑–º–µ–Ω–∏—Ç—å|–æ–±–Ω–æ–≤–∏—Ç—å|–Ω–∞–∑–Ω–∞—á–∏—Ç—å)\b/.test(query)
  
  // –ü—Ä–æ—Å—Ç—ã–µ –∑–∞–ø—Ä–æ—Å—ã: –∫–æ—Ä–æ—Ç–∫–∏–µ, –æ–¥–Ω–∞ —Å—É—â–Ω–æ—Å—Ç—å, –±–µ–∑ –¥–µ–π—Å—Ç–≤–∏–π
  if (words <= 8 && !hasMultipleEntities && !hasSpecificActions && !hasDateRanges && !hasConditions) {
    return 'simple'
  }
  
  // –°–ª–æ–∂–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã: –¥–ª–∏–Ω–Ω—ã–µ, —Å —É—Å–ª–æ–≤–∏—è–º–∏, –¥–∞—Ç–∞–º–∏, –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Å—É—â–Ω–æ—Å—Ç—è–º–∏
  if (words > 15 || hasDateRanges || hasConditions || (hasMultipleEntities && hasSpecificActions)) {
    return 'complex'
  }
  
  return 'medium'
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–º–µ–Ω–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
function isToolNameVariant(query: string, toolName: string): boolean {
  const variants = generateToolNameVariants(toolName)
  return variants.some(variant => query.includes(variant.toLowerCase()))
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–º–µ–Ω–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
function generateToolNameVariants(toolName: string): string[] {
  const variants = [toolName]
  
  // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è camelCase –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥
  const readable = toolName.replace(/([A-Z])/g, ' $1').trim().toLowerCase()
  variants.push(readable)
  
  // –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∑–∞–º–µ–Ω—ã
  const replacements = {
    'get': ['–ø–æ–ª—É—á–∏—Ç—å', '–ø–æ–∫–∞–∑–∞—Ç—å', '–Ω–∞–π—Ç–∏'],
    'create': ['—Å–æ–∑–¥–∞—Ç—å', '–¥–æ–±–∞–≤–∏—Ç—å'],
    'update': ['–æ–±–Ω–æ–≤–∏—Ç—å', '–∏–∑–º–µ–Ω–∏—Ç—å'],
    'delete': ['—É–¥–∞–ª–∏—Ç—å', '—É–±—Ä–∞—Ç—å'],
    'all': ['–≤—Å–µ', '–≤—Å–µ—Ö'],
    'user': ['–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', '—é–∑–µ—Ä'],
    'book': ['–∫–Ω–∏–≥–∞', '–∫–Ω–∏–≥–∏'],
    'reservation': ['—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ', '–±—Ä–æ–Ω—å']
  }
  
  let result = readable
  Object.entries(replacements).forEach(([eng, rus]) => {
    rus.forEach(r => {
      if (result.includes(eng)) {
        variants.push(result.replace(eng, r))
      }
    })
  })
  
  return variants
}

// –£–ª—É—á—à–µ–Ω–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
function getSuggestedCategories(
  detectedCategories: string[], 
  query: string, 
  intentType: string,
  userLevel: number
): string[] {
  const suggestions: string[] = []

  // –§–∏–ª—å—Ç—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ —É—Ä–æ–≤–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const availableCategories = TOOL_CATEGORIES.filter(cat => 
    !cat.minUserLevel || cat.minUserLevel <= userLevel
  ).map(cat => cat.id)

  // –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  if (detectedCategories.includes("reservations")) {
    if (!detectedCategories.includes("users") && availableCategories.includes("users")) {
      suggestions.push("users")
    }
    if (!detectedCategories.includes("books") && availableCategories.includes("books")) {
      suggestions.push("books")
  }
  }

  if (detectedCategories.includes("users") &&
      (query.includes("—Ä–æ–ª—å") || query.includes("–ø—Ä–∞–≤–∞")) &&
      availableCategories.includes("roles")) {
    if (!detectedCategories.includes("roles")) suggestions.push("roles")
  }

  // –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏—è
  if (intentType === 'report' && !detectedCategories.includes("reports") && 
      availableCategories.includes("reports")) {
    suggestions.push("reports")
  }

  if (intentType === 'navigation' && !detectedCategories.includes("navigation") &&
      availableCategories.includes("navigation")) {
    suggestions.push("navigation")
}

  // –î–ª—è –Ω–æ–≤–∏—á–∫–æ–≤ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  if (userLevel === USER_LEVELS.NOVICE && detectedCategories.length === 0) {
    return ["users", "books", "reservations"].filter(cat => 
      availableCategories.includes(cat) && !detectedCategories.includes(cat)
    )
  }

  return suggestions.filter(cat => availableCategories.includes(cat))
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Å —É—á–µ—Ç–æ–º —É—Ä–æ–≤–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ò –ù–û–í–´–• –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ô
export function filterToolsByCategories(
  allTools: Tool[],
  selectedCategories: string[],
  specificTools: string[] = [],
  config: ToolSelectionConfig = DEFAULT_TOOL_SELECTION_CONFIG,
  executionContext?: ExecutionContext
): Tool[] {
  // ... (–ª–æ–≥–∏–∫–∞ –¥–ª—è isFinalResponse –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
  if (config.isFinalResponse || executionContext?.isLikelyFinalResponse) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö –Ω–∞–≤–∏–≥–∞—Ü–∏—è - –µ—Å–ª–∏ –¥–∞, —Ç–æ –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º FINAL_RESPONSE_TOOLS
    const hasNavigationCategory = selectedCategories.includes('navigation')
    const hasSystemCategory = selectedCategories.includes('system')
    
    if (hasNavigationCategory || hasSystemCategory) {
      // –î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö/—Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–µ –ø—Ä–∏–º–µ–Ω—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ FINAL_RESPONSE_TOOLS
      console.log(`üéØ –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç (–Ω–∞–≤–∏–≥–∞—Ü–∏—è/—Å–∏—Å—Ç–µ–º–∞): –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π FINAL_RESPONSE_TOOLS`)
    } else {
      // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø—Ä–∏–º–µ–Ω—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ
      const finalTools = allTools.filter(tool => 
        FINAL_RESPONSE_TOOLS.includes(tool.name) ||
        specificTools.includes(tool.name)
      )
      console.log(`üéØ –î–µ—Ç–µ–∫—Ü–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞: –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${finalTools.length}/${allTools.length} –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤`)
      return finalTools.slice(0, 8) // –ú–∞–∫—Å–∏–º—É–º 8 –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
    }
  }

  const availableCategories = TOOL_CATEGORIES.filter(cat => 
    !cat.minUserLevel || cat.minUserLevel <= config.userLevel
  );

  const categoriesToInclude = new Set([
    ...selectedCategories,
    ...config.alwaysIncludeCategories.filter(cat => 
      availableCategories.some(avail => avail.id === cat)
    )
  ]);

  if (config.userPreferences?.excludedCategories) {
    config.userPreferences.excludedCategories.forEach(cat =>
      categoriesToInclude.delete(cat)
    );
  }

  const toolNamesToInclude = new Set<string>();

  availableCategories.forEach(category => {
    if (categoriesToInclude.has(category.id)) {
      category.tools.forEach(toolName => {
        toolNamesToInclude.add(toolName);
      });
    }
  });

  specificTools.forEach(toolName => toolNamesToInclude.add(toolName));

  let filteredTools = allTools.filter(tool =>
    toolNamesToInclude.has(tool.name)
  );

  // --- –ö–õ–Æ–ß–ï–í–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 1: –ë–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∞—è –∏ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è ---
  // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ —Ñ–ª–∞–≥–∞–º –∫–æ –≤—Å–µ–º—É –Ω–∞–±–æ—Ä—É –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤.

  if (config.hasMultipleEntities) {
    const initialCount = filteredTools.length;
    filteredTools = filteredTools.filter(tool => {
      // –ò—Å–∫–ª—é—á–∞–µ–º –≤—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É—é—Ç —Å—É—â–Ω–æ—Å—Ç–∏
      if (ENTITY_MODIFICATION_TOOLS.includes(tool.name)) {
        // –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: createReservation –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω—É–∂–µ–Ω –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ user+book
        if (tool.name === 'createReservation') {
          return true;
        }
        return false;
      }
      return true;
    });
    console.log(`üö´ [–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è] –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏: –£–¥–∞–ª–µ–Ω–æ ${initialCount - filteredTools.length} CRUD –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤.`);
  }

  // ... (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
  if (filteredTools.length > config.maxToolsPerRequest) {
    const priorityMap = new Map<string, number>()
    availableCategories.forEach(cat => {
      cat.tools.forEach(toolName => {
        if (!priorityMap.has(toolName) || priorityMap.get(toolName)! > cat.priority) {
          priorityMap.set(toolName, cat.priority)
        }
      })
    })

    filteredTools = filteredTools
      .sort((a, b) => {
        const aInSpecific = specificTools.includes(a.name) ? -100 : 0
        const bInSpecific = specificTools.includes(b.name) ? -100 : 0
        if (aInSpecific !== bInSpecific) return aInSpecific - bInSpecific
        return (priorityMap.get(a.name) || 999) - (priorityMap.get(b.name) || 999)
      })
      .slice(0, config.maxToolsPerRequest)
  }

  return filteredTools;
}

// ---------- –ö–≠–®–ò–†–û–í–ê–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –í–´–ë–û–†–ê –ò–ù–°–¢–†–£–ú–ï–ù–¢–û–í ----------
interface ToolSelectionCache {
  [selectionHash: string]: {
    result: {
      selectedTools: Tool[]
      analysis: ReturnType<typeof analyzeUserQuery>
      usedCategories: string[]
    }
    timestamp: number
  }
}

const toolSelectionCache: ToolSelectionCache = {}
const TOOL_SELECTION_CACHE_TTL = 10 * 60 * 1000 // 10 –º–∏–Ω—É—Ç

function getToolSelectionHash(query: string, config: ToolSelectionConfig, executionContext?: ExecutionContext): string {
  const contextStr = executionContext ? JSON.stringify({
    hasExecutedTools: executionContext.hasExecutedTools,
    iterationCount: executionContext.iterationCount,
    isLikelyFinalResponse: executionContext.isLikelyFinalResponse
  }) : ''
  
  // –ù–û–í–û–ï: –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ —Ö—ç—à
  const appendStr = config.appendToExisting ? 
    `_append_${config.existingTools?.map(t => t.name).join(',') || ''}` : ''
  
  return `${query.toLowerCase().trim()}_${config.userLevel}_${config.maxToolsPerRequest}_${contextStr}${appendStr}`
}
// ---------- –ö–û–ù–ï–¶ –ö–≠–®–ò–†–û–í–ê–ù–ò–Ø –í–´–ë–û–†–ê –ò–ù–°–¢–†–£–ú–ï–ù–¢–û–í ----------

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–æ–π –ò –ù–û–í–´–ú–ò –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø–ú–ò
export function selectToolsForQuery(
  query: string,
  allTools: Tool[],
  config: ToolSelectionConfig = DEFAULT_TOOL_SELECTION_CONFIG,
  executionContext?: ExecutionContext // –ù–û–í–´–ô –ø–∞—Ä–∞–º–µ—Ç—Ä
): {
  selectedTools: Tool[]
  analysis: ReturnType<typeof analyzeUserQuery>
  usedCategories: string[]
} {
  // –ù–û–í–û–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à –≤—ã–±–æ—Ä–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
  const selectionHash = getToolSelectionHash(query, config, executionContext)
  const cachedSelection = toolSelectionCache[selectionHash]
  
  if (cachedSelection && (Date.now() - cachedSelection.timestamp) < TOOL_SELECTION_CACHE_TTL) {
    console.log(`üéØ –ö—ç—à –≤—ã–±–æ—Ä–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ HIT: "${query.substring(0, 50)}..."`)
    return cachedSelection.result
  }
  
  console.log(`‚ùå –ö—ç—à –≤—ã–±–æ—Ä–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ MISS: "${query.substring(0, 50)}..."`)
  
  const analysis = analyzeUserQuery(query, config.userLevel)
  let categoriesToUse = [...analysis.detectedCategories]
  let specificTools = [...analysis.detectedTools]

  // --- –ö–õ–Æ–ß–ï–í–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 2: –ü–µ—Ä–µ–¥–∞–µ–º –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–ª–∞–≥–∏ –∏–∑ config ---
  const enhancedConfig = {
    ...config,
    hasToolExecutions: executionContext?.hasExecutedTools || false,
    isFinalResponse: executionContext?.isLikelyFinalResponse || false,
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–ª–∞–≥–∏ –∏–∑ config (–∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ) –ò–õ–ò –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
    hasMultipleEntities: config.hasMultipleEntities || analysis.hasMultipleEntities,
    hasPasswordMention: config.hasPasswordMention || analysis.hasPasswordMention
  };
  
  console.log("üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞:", { 
      hasMultipleEntities: enhancedConfig.hasMultipleEntities, 
      hasPasswordMention: enhancedConfig.hasPasswordMention,
      appendToExisting: enhancedConfig.appendToExisting
  });

  // --- –ö–õ–Æ–ß–ï–í–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 3: –£–º–Ω–æ–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ ---
  if (enhancedConfig.appendToExisting && enhancedConfig.existingTools) {
    // 1. –ù–∞—á–∏–Ω–∞–µ–º —Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    const existingToolNames = enhancedConfig.existingTools.map(t => t.name);
    specificTools = [...new Set([...existingToolNames, ...specificTools])];
    
    // 2. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –±—ã–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã
    const existingCategories = TOOL_CATEGORIES
      .filter(cat => cat.tools.some(toolName => existingToolNames.includes(toolName)))
      .map(cat => cat.id);
      
    // 3. –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ –∏ –Ω–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    categoriesToUse = [...new Set([...existingCategories, ...categoriesToUse])];
    
    console.log(`üîß [–î–û–ü–û–õ–ù–ï–ù–ò–ï] –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã (${existingToolNames.length}) –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (${existingCategories.join(', ')}) —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.`);
  }

  // –ï—Å–ª–∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
  if (analysis.detectedCategories.length === 0 && analysis.detectedTools.length === 0) {
      categoriesToUse = [];
  } else if (analysis.intentType === 'navigation' && analysis.complexity === 'simple') {
    // –î–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä
    categoriesToUse = ['navigation']; // 'system' –¥–æ–±–∞–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ alwaysIncludeCategories
  } else {
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    analysis.suggestedCategories.forEach(cat => {
      if (!categoriesToUse.includes(cat)) {
        categoriesToUse.push(cat);
      }
    });

    // –û–±—ã—á–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    if (categoriesToUse.includes('users') && !specificTools.includes('searchUsers')) {
      specificTools.push('searchUsers');
    }
    if (categoriesToUse.includes('books') && !specificTools.includes('searchBooks')) {
      specificTools.push('searchBooks');
    }
    if (categoriesToUse.includes('reservations') && !specificTools.includes('searchReservations')) {
      specificTools.push('searchReservations');
    }
  }

  // –ï—Å–ª–∏ –ø–æ—Å–ª–µ –≤—Å–µ–π –ª–æ–≥–∏–∫–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ (–∫—Ä–æ–º–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö), –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–π –Ω–∞–±–æ—Ä
  if (categoriesToUse.length === 0 && specificTools.length === 0) {
    // –≠—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω—É–∂–Ω–∞, —á—Ç–æ–±—ã –ø—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –Ω–µ –≤—ã–∑—ã–≤–∞–ª –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –Ω–∞–±–æ—Ä
    const queryHasKeywords = TOOL_CATEGORIES.some(cat => cat.keywords.some(kw => query.includes(kw)));
    if (queryHasKeywords || query.length > 10) { // –ï—Å–ª–∏ –µ—Å—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–ª–∏ –∑–∞–ø—Ä–æ—Å –¥–ª–∏–Ω–Ω—ã–π
        if (enhancedConfig.userLevel === USER_LEVELS.NOVICE) {
          categoriesToUse = ["users", "books", "reservations"];
        } else {
          categoriesToUse = ["users", "books", "reservations", "reports"];
        }
    }
  }

  // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
  if (enhancedConfig.userPreferences?.preferredCategories) {
    enhancedConfig.userPreferences.preferredCategories.forEach(cat => {
      if (!categoriesToUse.includes(cat)) {
        categoriesToUse.push(cat)
      }
    })
  }



  // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
  let maxTools: number;
  
  // –ù–û–í–ê–Ø –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –î–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ —Ä–µ–∑–∫–æ —Å–æ–∫—Ä–∞—â–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
  if (enhancedConfig.isFinalResponse) {
    maxTools = 6;
  } else {
    switch (analysis.complexity) {
      case 'simple':
        // –î–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –º–∏–Ω–∏–º—É–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        maxTools = categoriesToUse.length <= 1 ? 4 : 6;
        break;
      case 'medium':
        // –î–ª—è —Å—Ä–µ–¥–Ω–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ —É–º–µ—Ä–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        maxTools = enhancedConfig.hasMultipleEntities ? 8 : 10;
        break;
      case 'complex':
      default:
        // –î–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –º–∞–∫—Å–∏–º—É–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        maxTools = 15;
        break;
    }
  }
  

  
  const dynamicConfig = {
      ...enhancedConfig,
      maxToolsPerRequest: maxTools
  };

  const selectedTools = filterToolsByCategories(allTools, categoriesToUse, specificTools, dynamicConfig, executionContext)

  const result = {
    selectedTools,
    analysis,
    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏
    usedCategories: [...new Set(TOOL_CATEGORIES
        .filter(cat => selectedTools.some(tool => cat.tools.includes(tool.name)))
        .map(cat => cat.id))]
  }
  
  // –ù–û–í–û–ï: –ö—ç—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–±–æ—Ä–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
  toolSelectionCache[selectionHash] = {
    result,
    timestamp: Date.now()
  }
  
  // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –æ—á–∏—â–∞–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∑–∞–ø–∏—Å–∏ –∫—ç—à–∞ (—Ä–∞–∑ –≤ 50 –∑–∞–ø—Ä–æ—Å–æ–≤)
  if (Object.keys(toolSelectionCache).length % 50 === 0) {
    const now = Date.now()
    Object.keys(toolSelectionCache).forEach(key => {
      if (now - toolSelectionCache[key].timestamp > TOOL_SELECTION_CACHE_TTL) {
        delete toolSelectionCache[key]
      }
    })
  }
  
  return result
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
export function getToolUsageStats(selectedTools: Tool[], allTools: Tool[]): {
  totalTools: number
  selectedCount: number
  reductionPercentage: number
  categoriesUsed: string[]
  efficiencyScore: number
} {
  const selectedNames = new Set(selectedTools.map(t => t.name))
  const categoriesUsed = TOOL_CATEGORIES
    .filter(cat => cat.tools.some(toolName => selectedNames.has(toolName)))
    .map(cat => cat.id)

  const reductionPercentage = allTools.length > 0 ? 
    Math.round((1 - selectedTools.length / allTools.length) * 100) : 0

  // –í—ã—á–∏—Å–ª—è–µ–º –æ—Ü–µ–Ω–∫—É —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (—á–µ–º –±–æ–ª—å—à–µ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ, —Ç–µ–º –ª—É—á—à–µ)
  const efficiencyScore = Math.min(100, reductionPercentage + categoriesUsed.length * 5)

  return {
    totalTools: allTools.length,
    selectedCount: selectedTools.length,
    reductionPercentage,
    categoriesUsed,
    efficiencyScore
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
export function createSelectionSummary(
  analysis: ReturnType<typeof analyzeUserQuery>,
  usedCategories: string[],
  stats: ReturnType<typeof getToolUsageStats>
): string {
  const categoryNames = usedCategories
    .map(id => TOOL_CATEGORIES.find(cat => cat.id === id)?.name)
    .filter(Boolean)
    .join(", ")

  const intentText = {
    'question': '–í–æ–ø—Ä–æ—Å',
    'action': '–î–µ–π—Å—Ç–≤–∏–µ', 
    'report': '–û—Ç—á–µ—Ç',
    'navigation': '–ù–∞–≤–∏–≥–∞—Ü–∏—è'
  }[analysis.intentType] || '–ó–∞–ø—Ä–æ—Å'

  const complexityText = {
    'simple': '–ø—Ä–æ—Å—Ç–æ–π',
    'medium': '—Å—Ä–µ–¥–Ω–∏–π',
    'complex': '—Å–ª–æ–∂–Ω—ã–π'
  }[analysis.complexity] || '–æ–±—ã—á–Ω—ã–π'

  const detectedText = analysis.detectedCategories.length > 0
    ? `–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã: ${analysis.detectedCategories.map(id =>
        TOOL_CATEGORIES.find(cat => cat.id === id)?.name
      ).join(", ")}`
    : "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–∞–∑–æ–≤—ã–π –Ω–∞–±–æ—Ä"

  const specificToolsText = analysis.detectedTools.length > 0
    ? ` (+ ${analysis.detectedTools.length} –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤)`
    : ""

  let optimizationText = ""
  if (analysis.hasMultipleEntities) {
    optimizationText += " üö´ CRUD –∏—Å–∫–ª—é—á–µ–Ω—ã –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π."
  }
  if (!analysis.hasPasswordMention) {
    optimizationText += " üîí –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø–∞—Ä–æ–ª–µ–π –∏—Å–∫–ª—é—á–µ–Ω—ã."
  }

  return `${intentText} (${complexityText}). ${detectedText}${specificToolsText}.${optimizationText} –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${stats.selectedCount}/${stats.totalTools} –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ (-${stats.reductionPercentage}%). –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: ${categoryNames}. –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${stats.efficiencyScore}%.`
}

// T9 —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–æ–º–∞–Ω–¥
export class T9Helper {
  private static keyMap: { [key: string]: string[] } = {
    '2': ['–∞', '–±', '–≤', '–≥'],
    '3': ['–¥', '–µ', '—ë', '–∂', '–∑'],
    '4': ['–∏', '–π', '–∫', '–ª'],
    '5': ['–º', '–Ω', '–æ', '–ø'],
    '6': ['—Ä', '—Å', '—Ç', '—É'],
    '7': ['—Ñ', '—Ö', '—Ü', '—á'],
    '8': ['—à', '—â', '—ä', '—ã'],
    '9': ['—å', '—ç', '—é', '—è']
  }

  private static commands = [
    '–ø–æ–∫–∞–∂–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', '–ø–æ–∫–∞–∂–∏ –≤—Å–µ –∫–Ω–∏–≥–∏', '–ø–æ–∫–∞–∂–∏ –≤—Å–µ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è',
    '—Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', '—Å–æ–∑–¥–∞—Ç—å –∫–Ω–∏–≥—É', '—Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ',
    '–Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', '–Ω–∞–π—Ç–∏ –∫–Ω–∏–≥—É', '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
    '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–Ω–∏–≥', '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–π', '–ø–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫',
    '—Å–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç', '—Ç–æ–ø –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–Ω–∏–≥', '–ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è',
    '–∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è', '–æ–¥–æ–±—Ä–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ', '–æ—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ',
    '–≤–µ—Ä–Ω—É—Ç—å –∫–Ω–∏–≥—É', '–≤—ã–¥–∞—Ç—å –∫–Ω–∏–≥—É', '–Ω–∞–∑–Ω–∞—á–∏—Ç—å —Ä–æ–ª—å', '–∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å',
    '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', '–ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É', '–æ—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥'
  ]

  static getSuggestions(input: string, maxSuggestions: number = 5): string[] {
    if (!input.trim()) return []
    
    const normalizedInput = input.toLowerCase().trim()
    
    const startsWith = this.commands.filter(cmd => 
      cmd.toLowerCase().startsWith(normalizedInput)
    )
    
    const contains = this.commands.filter(cmd => 
      cmd.toLowerCase().includes(normalizedInput) && 
      !cmd.toLowerCase().startsWith(normalizedInput)
    )
    
    const fuzzy = this.commands.filter(cmd => {
      const words = normalizedInput.split(' ')
      return words.every(word => cmd.toLowerCase().includes(word))
    }).filter(cmd => !startsWith.includes(cmd) && !contains.includes(cmd))
    
    return [...startsWith, ...contains, ...fuzzy].slice(0, maxSuggestions)
  }
}

// –ù–û–í–û–ï: –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—ç—à–µ–º –∞–Ω–∞–ª–∏–∑–∞
export function getQueryAnalysisCacheStats(): { size: number; oldestEntry: number; newestEntry: number } {
  const entries = Object.values(queryAnalysisCache)
  const timestamps = entries.map(e => e.timestamp)
  
  return {
    size: entries.length,
    oldestEntry: timestamps.length > 0 ? Math.min(...timestamps) : 0,
    newestEntry: timestamps.length > 0 ? Math.max(...timestamps) : 0
  }
}

export function clearQueryAnalysisCache(): void {
  Object.keys(queryAnalysisCache).forEach(key => delete queryAnalysisCache[key])
  Object.keys(toolSelectionCache).forEach(key => delete toolSelectionCache[key])
  console.log('üßπ –ö—ç—à –∞–Ω–∞–ª–∏–∑–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –≤—ã–±–æ—Ä–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –æ—á–∏—â–µ–Ω')
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
export {
  TOOL_CATEGORIES as toolCategories,
  DEFAULT_TOOL_SELECTION_CONFIG as defaultConfig,
  USER_LEVELS as userLevels
}


